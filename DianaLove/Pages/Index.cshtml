@page
@model Dianalove.Pages.IndexModel
@{
    ViewData["Title"] = "Комплименты для Дианы";
}

<div class="container">
    <h1 class="title">Комплименты для Дианы</h1>

    <div class="text-center">
        <button class="btn btn-primary compliment-button" onclick="generateCompliment()">
            <i class="fas fa-star"></i> Получить комплимент
        </button>
        <div id="complimentResult" class="compliment-result mt-4"></div>
    </div>

    <!-- Кнопка для переключения тем в виде сердца -->
    <button id="themeToggle" class="btn btn-heart">
        <i class="fas fa-heart"></i>
    </button>
</div>

@section Styles {
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            transition: background-color 0.3s ease;
            position: relative; /* Позволяет позиционировать кнопку относительно контейнера */
        }

        /* Темы */
        .theme-red {
            background-color: #e57373; /* Красный фон */
            color: #333; /* Темный текст для контраста */
        }

        .theme-pink {
            background-color: #f06292; /* Розовый фон */
            color: #333; /* Темный текст для контраста */
        }

        .theme-purple {
            background-color: #ba68c8; /* Фиолетовый фон */
            color: #333; /* Темный текст для контраста */
        }

        .theme-teal {
            background-color: #4db6ac; /* Бирюзовый фон */
            color: #333; /* Темный текст для контраста */
        }

        .container {
            background: rgba(255, 255, 255, 0.9); /* Прозрачный фон для контейнера */
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            text-align: center;
            transition: background 0.3s ease; /* плавный переход фона контейнера */
        }

        .title {
            margin-bottom: 20px;
        }

        .btn-primary {
            background-color: #ec407a; /* Цвет кнопки */
            padding: 15px 30px;
            font-size: 1.2em;
            border-radius: 50px;
            transition: background-color 0.3s ease, transform 0.3s ease; /* Анимация для фона и трансформации */
            color: white; /* Белый текст */
        }

            .btn-primary:hover {
                transform: scale(1.05); /* Увеличение размера кнопки при наведении */
            }

        .compliment-result {
            font-size: 1.5em;
            margin-top: 20px;
            opacity: 0; /* Скрываем текст по умолчанию */
            transition: opacity 0.5s ease; /* Плавный переход для непрозрачности */
        }

            .compliment-result.show {
                opacity: 1; /* Показать текст с эффектом */
            }

        .btn-heart {
            position: absolute; /* Позиционирование относительно контейнера */
            bottom: 20px; /* Отступ от низа */
            right: 20px; /* Отступ от правого края */
            background: transparent; /* Прозрачный фон */
            border: none; /* Убираем рамку */
            font-size: 2em; /* Большой размер шрифта для сердца */
            color: #ec407a; /* Цвет сердца */
            transition: transform 0.3s ease; /* Плавный переход для трансформации */
            padding: 10px; /* Отступ для кнопки */
        }

            .btn-heart:hover {
                transform: scale(1.2); /* Увеличение размера сердца при наведении */
            }
    </style>
}

@section Scripts {
    <script>
        // Инициализация текущей темы
        let currentThemeIndex = 0; // Индекс текущей темы
        const themes = [
            'theme-red',
            'theme-pink',
            'theme-purple',
            'theme-teal'
        ];

        // Переключение темы
        const themeToggleButton = document.getElementById('themeToggle');
        themeToggleButton.addEventListener('click', () => {
            // Удаляем текущую тему
            document.body.classList.remove(themes[currentThemeIndex]);

            // Увеличиваем индекс темы
            currentThemeIndex = (currentThemeIndex + 1) % themes.length;

            // Добавляем новую тему
            document.body.classList.add(themes[currentThemeIndex]);
        });

        function generateCompliment() {
            fetch('@Url.Page("/Index", "GenerateCompliment")')
                .then(response => response.text())
                .then(data => {
                    const resultDiv = document.getElementById('complimentResult');
                    resultDiv.innerHTML = data;

                    resultDiv.classList.remove('show');

                    requestAnimationFrame(() => {
                        resultDiv.classList.add('show'); // Убираем скрытие и включаем видимость
                    });
                });
        }
    </script>
}