@page
@model Dianalove.Pages.IndexModel
@{
    ViewData["Title"] = "Комплименты для Дианы";
}

<div class="heart-background"></div> <!-- Фон с сердцами -->

<div class="container">
    <h1 class="title">Комплименты для Дианы</h1>
    
    <div class="text-center">
        <button class="btn btn-primary compliment-button" onclick="generateCompliment()">
            <i class="fas fa-star"></i> Получить комплимент
        </button>
        <div id="complimentResult" class="compliment-result mt-4"></div>
    </div>

    <!-- Кнопка для переключения тем в виде сердца -->
    <button id="themeToggle" class="btn btn-heart">
        <i class="fas fa-heart"></i>
    </button>
</div>

@section Scripts {
    <script>
        // Инициализация текущей темы
        let currentThemeIndex = 0; // Индекс текущей темы
        const themes = [
            'theme-red',
            'theme-pink',
            'theme-purple',
            'theme-teal'
        ];

        // Переключение темы
        const themeToggleButton = document.getElementById('themeToggle');
        themeToggleButton.addEventListener('click', () => {
            // Удаляем текущую тему
            document.body.classList.remove(themes[currentThemeIndex]);

            // Увеличиваем индекс темы
            currentThemeIndex = (currentThemeIndex + 1) % themes.length;

            // Добавляем новую тему
            document.body.classList.add(themes[currentThemeIndex]);
        });

        function generateCompliment() {
            fetch('@Url.Page("/Index", "GenerateCompliment")')
                .then(response => response.text())
                .then(data => {
                    const resultDiv = document.getElementById('complimentResult');
                    resultDiv.innerHTML = data;

                    resultDiv.classList.remove('show');

                    requestAnimationFrame(() => {
                        resultDiv.classList.add('show'); // Убираем скрытие и включаем видимость
                    });
                });
        }
    </script>
}